import array
import typing as t

class DiffusionModel:
    def advance_model(self) -> None: ...
    def reset_model(self) -> None: ...
    def advance_until_completion(self) -> None: ...
    def run_in_parallel(self, k: int) -> float: ...
    def get_newly_activated_nodes(self) -> t.Generator[int, None, None]: ...

class IndependentCascadeModel(DiffusionModel):
    def __init__(
        self,
        starts: array.array,
        edges: array.array,
        threshold: float = 0.1,
        edge_probabilities: t.Optional[array.array] = None,
    ) -> None: ...
    def initialize_model(self, seeds: t.Iterable[int]) -> None: ...
    def get_num_activated_nodes(self) -> int: ...
